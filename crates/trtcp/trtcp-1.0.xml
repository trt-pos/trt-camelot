<protocol byte-order="big-endian" version="1.0">
    <requests>
        <msg-type value="0" />
        <head>
            <field name="version" type="u16" />
            <field name="patch" type="u16" />
            <field name="caller" type="string">
                <description>
                    Name of the client.
                    Matches regex [a-zA-Z0-9_]+
                </description>
            </field>
        </head>
        <unit-separator value="0x1F"/>
        <action>
            <field name="action" type="action-type" />
            <field name="module:id" type="string" optional="true">
                <description>
                    The module and id of the action
                    Ex.: plugin-cash-register:orderModified
                </description>
            </field>
        </action>
        <unit-separator value="0x1F"/>
        <body>
            <field name="action-data" type="[u8]" />
        </body>
    </requests>
    <responses>
        <msg-type value="1" />
        <head>
            <field name="version" type="u16" />
            <field name="patch" type="u16" />
            <field name="caller" type="string" >
                <description>
                    The caller is the same name as in the request
                    Matches regex [a-zA-Z0-9_\-]+
                </description>
            </field>
        </head>
        <unit-separator value="0x1F"/>
        <status>
            <field name="status" type="status-code" />
        </status>
        <unit-separator value="0x1F"/>
        <body>
            <field name="response-data" type="[u8]" />
        </body>
    </responses>
    <msg-type type="u8">
        <values>
            <value name="request" value="0" />
            <value name="response" value="1" />
        </values>
    </msg-type>
    <action-type type="u8">
        <values>
            <value name="connect" value="0" >
                <requires-body value="no" />
                <description>
                    Establish the first connection server-client
                    and saves the client using the caller field provided in the head
                </description>
            </value>
            <value name="listen" value="1" >
                <requires-body value="no"/>
                <description>
                    Subscribe a listener to the designed id
                </description>
            </value>
            <value name="invoke" value="2" >
                <requires-body value="yes"/>
                <description>
                    Invoke all the listeners subscribed to the id. The body content is the data to be sent to the listeners,
                    and its obtained from the request
                </description>
            </value>
            <value name="create" value="3" >
                <requires-body value="no"/>
                <description>
                    Create a new listener with the provided id
                </description>
            </value>
            <value name="leave" value="4" >
                <requires-body value="no"/>
                <description>
                    Unsubscribe the listener from the id
                </description>
            </value>
            <value name="callback" value="5" >
                <requires-body value="yes"/>
                <description>
                    The server sends this type of request to the clients listening to the event
                    This is the only Request type that the server can send to the client,
                    the client can't send it to the server
                </description>
            </value>
        </values>
    </action-type>
    <status-code type="i8">
        <values>
            <value name="OK" value="0" />
            <value name="GenericError" value="-1" />
            <value name="NeedConnection" value="-2" />
            <value name="InternalServerError" value="-3" />
            <value name="AlreadyConnected" value="1" />
            <value name="InvalidRequest" value="2" />
            <value name="EventNotFound" value="3" />
            <value name="ListenerNotFound" value="4" />
            <value name="EventAlreadyExists" value="5" />
            <value name="AlreadySubscribed" value="6" />
        </values>
    </status-code>
</protocol>

